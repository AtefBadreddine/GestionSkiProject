{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet UpdateCoursComponent = class UpdateCoursComponent {\n  constructor(formBuilder, coursService, router, activatedRoute) {\n    this.formBuilder = formBuilder;\n    this.coursService = coursService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.coursForm = this.formBuilder.group({\n      niveau: ['', [Validators.required]],\n      typeCours: ['', [Validators.required]],\n      support: ['', [Validators.required]],\n      prix: ['', [Validators.required]],\n      creneau: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(res => this.id = res.get('id'));\n    this.coursService.getCours(this.id).subscribe(coursData => {\n      this.cours = coursData;\n      // Patch the form with the Cours data\n      this.coursForm.patchValue({\n        niveau: coursData.niveau,\n        typeCours: coursData.typeCours,\n        support: coursData.support,\n        prix: coursData.prix,\n        creneau: coursData.creneau\n      });\n    }, error => {\n      console.error('Error fetching cours data:', error);\n    });\n  }\n  updateCours() {\n    if (this.coursForm.valid) {\n      let cours = this.coursForm.value;\n      this.coursService.updateCours(cours).subscribe(response => {\n        if (response) {\n          this.router.navigate(['cours']);\n        } else {\n          console.error('Unexpected response status:');\n        }\n      }, error => {\n        console.error('Error updating cours:', error);\n      });\n    }\n  }\n  get niveau() {\n    return this.coursForm.get('niveau');\n  }\n  get typeCours() {\n    return this.coursForm.get('typeCours');\n  }\n  get support() {\n    return this.coursForm.get('support');\n  }\n  get prix() {\n    return this.coursForm.get('prix');\n  }\n  get creneau() {\n    return this.coursForm.get('creneau');\n  }\n};\nUpdateCoursComponent = __decorate([Component({\n  selector: 'app-update-cours',\n  templateUrl: './update-cours.component.html',\n  styleUrls: ['./update-cours.component.scss']\n})], UpdateCoursComponent);\nexport { UpdateCoursComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","UpdateCoursComponent","constructor","formBuilder","coursService","router","activatedRoute","coursForm","group","niveau","required","typeCours","support","prix","creneau","ngOnInit","paramMap","subscribe","res","id","get","getCours","coursData","cours","patchValue","error","console","updateCours","valid","value","response","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\zoghl\\Desktop\\gestionski final\\GestionSkiProject\\frontend-Angular\\src\\app\\cours\\components\\update-cours\\update-cours.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CoursService } from '.angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Cours } from 'path-to-your-cours-model';\r\n\r\n@Component({\r\n  selector: 'app-update-cours',\r\n  templateUrl: './update-cours.component.html',\r\n  styleUrls: ['./update-cours.component.scss']\r\n})\r\nexport class UpdateCoursComponent implements OnInit {\r\n  coursForm: FormGroup;\r\n  cours: Cours;\r\n  id: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private coursService: CoursService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.coursForm = this.formBuilder.group({\r\n      niveau: ['', [Validators.required]],\r\n      typeCours: ['', [Validators.required]],\r\n      support: ['', [Validators.required]],\r\n      prix: ['', [Validators.required]],\r\n      creneau: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(res => (this.id = res.get('id')));\r\n\r\n    this.coursService.getCours(this.id).subscribe(\r\n      (coursData: Cours) => {\r\n        this.cours = coursData;\r\n        // Patch the form with the Cours data\r\n        this.coursForm.patchValue({\r\n          niveau: coursData.niveau,\r\n          typeCours: coursData.typeCours,\r\n          support: coursData.support,\r\n          prix: coursData.prix,\r\n          creneau: coursData.creneau\r\n        });\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching cours data:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateCours() {\r\n    if (this.coursForm.valid) {\r\n      let cours: Cours = this.coursForm.value;\r\n      this.coursService.updateCours(cours).subscribe(\r\n        (response) => {\r\n          if (response) {\r\n            this.router.navigate(['cours']);\r\n          } else {\r\n            console.error('Unexpected response status:');\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error updating cours:', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  get niveau() {\r\n    return this.coursForm.get('niveau');\r\n  }\r\n\r\n  get typeCours() {\r\n    return this.coursForm.get('typeCours');\r\n  }\r\n\r\n  get support() {\r\n    return this.coursForm.get('support');\r\n  }\r\n\r\n  get prix() {\r\n    return this.coursForm.get('prix');\r\n  }\r\n\r\n  get creneau() {\r\n    return this.coursForm.get('creneau');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}