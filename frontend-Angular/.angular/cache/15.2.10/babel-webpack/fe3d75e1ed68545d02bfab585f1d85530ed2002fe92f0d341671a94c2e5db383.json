{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/moniteur.service\";\nimport * as i2 from \"@angular/router\";\nexport class ListCoursComponent {\n  constructor(service, route) {\n    this.service = service;\n    this.route = route;\n    this.listAll = [];\n    this.moniteur_id = null;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.moniteur_id = params['id'] || null; // Extract 'id' query param or set to null if not present\n      // You can perform further operations with the retrieved ID here\n    });\n\n    this.service.getCours(this.moniteur_id).subscribe(res => {\n      console.log(res);\n      this.listAll = res;\n    }, error => {\n      console.error('Error fetching moniteurs:', error);\n    });\n  }\n  remove(id) {\n    this.service.remove(id).subscribe(res => {\n      if (res.status === 200) this.listAll = this.listAll.filter(moniteur => moniteur.numCours !== id);\n    });\n  }\n  handleNotify(cours) {}\n  static #_ = this.ɵfac = function ListCoursComponent_Factory(t) {\n    return new (t || ListCoursComponent)(i0.ɵɵinject(i1.Service), i0.ɵɵinject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: ListCoursComponent\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ListCoursComponent, {\n    imports: [CommonModule]\n  });\n})();","map":{"version":3,"mappings":"AAIA,SAASA,YAAY,QAAQ,iBAAiB;;;;AAQ9C,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,OAAiB,EAAUC,KAAqB;IAAhD,YAAO,GAAPD,OAAO;IAAoB,UAAK,GAALC,KAAK;IAHpD,YAAO,GAAa,EAAE;IACtB,gBAAW,GAAmB,IAAI;EAGlC;EAEAC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACC,WAAW,GAAGD,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;MACzC;IACF,CAAC,CAAC;;IACF,IAAI,CAACL,OAAO,CAACO,QAAQ,CAAC,IAAI,CAACD,WAAW,CAAC,CAACF,SAAS,CAC9CI,GAAY,IAAI;MACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,OAAO,GAAGH,GAAG;IACpB,CAAC,EACAI,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAEAC,MAAM,CAACC,EAAW;IACd,IAAI,CAACd,OAAO,CAACa,MAAM,CAACC,EAAE,CAAC,CAACV,SAAS,CAC9BI,GAAG,IAAI;MACF,IAAIA,GAAG,CAACO,MAAM,KAAK,GAAG,EACtB,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACA,OAAO,CAACK,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,KAAKJ,EAAE,CAAC;IAE9E,CAAC,CACF;EACL;EAEAK,YAAY,CAACC,KAAc,GAE3B;EAAC;qBApCUtB,kBAAkB;EAAA;EAAA;UAAlBA;EAAkB;EAAA;cAJvBD,YAAY;EAAA;;;2EAIPC,kBAAkB;IAAAuB,UAJvBxB,YAAY;EAAA;AAAA","names":["CommonModule","ListCoursComponent","constructor","service","route","ngOnInit","queryParams","subscribe","params","moniteur_id","getCours","res","console","log","listAll","error","remove","id","status","filter","moniteur","numCours","handleNotify","cours","imports"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\myProjects\\ESPRIT\\TWIN\\GestionSkiProject-main\\frontend-Angular\\src\\app\\moniteur\\components\\list_cours\\list.component.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\nimport {Service} from \"../../../services/moniteur.service\";\nimport {Cours} from \"../../../models/cours\";\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common'\n       \n@NgModule({\n    imports: [\n        CommonModule\n    ]\n})\n\nexport class ListCoursComponent {\n\n  listAll : Cours[] = [] ;\n  moniteur_id : string | null = null;\n  ;\n  constructor(private service : Service, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.moniteur_id = params['id'] || null; // Extract 'id' query param or set to null if not present\n      // You can perform further operations with the retrieved ID here\n    });\n    this.service.getCours(this.moniteur_id).subscribe(\n      (res: Cours[]) => {\n        console.log(res);\n        this.listAll = res;\n      },\n      (error) => {\n        console.error('Error fetching moniteurs:', error);\n      }\n    );\n  }\n\n  remove(id : number) {\n      this.service.remove(id).subscribe(\n        (res) => {\n              if (res.status === 200)\n              this.listAll = this.listAll.filter(moniteur => moniteur.numCours !== id);\n\n        }\n      )\n  }\n\n  handleNotify(cours : number){\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}