{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nlet AbonnementListComponent = class AbonnementListComponent {\n  constructor(abonnementService, formBuilder, router) {\n    this.abonnementService = abonnementService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.typeAbonnementValues = TypeAbonnementValues;\n    this.message = '';\n    this.listAbonnement = [];\n  }\n  ngOnInit() {\n    this.abonnementService.getAllAbonnement().subscribe(res => {\n      this.listAbonnement = res;\n    }, error => {\n      console.error('Error fetching abonnement:', error);\n    });\n    this.abonnementForm = this.formBuilder.group({\n      dateDebut: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n  }\n  deleteAbonnement(id) {\n    this.abonnementService.deleteAbonnement(id).subscribe(res => {\n      if (res.status === 200) this.listAbonnement = this.listAbonnement.filter(abonnement => abonnement.numAbon !== id);\n    });\n  }\n  calculerJoursRestants(numAbon) {\n    this.abonnementService.calculerJoursRestants(numAbon).subscribe(response => {\n      this.message = `Il reste ${response} jours dans votre abonnement.`;\n    }, error => {\n      console.error('Erreur lors de l\\'appel du service:', error);\n      this.message = 'Erreur lors du calcul des jours restants.';\n    });\n  }\n};\nAbonnementListComponent = __decorate([Component({\n  selector: 'app-abonnement-list',\n  templateUrl: './abonnement-list.component.html',\n  styleUrls: ['./abonnement-list.component.scss']\n})], AbonnementListComponent);\nexport { AbonnementListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAoBC,UAAU,QAAQ,gBAAgB;AACtD,SAAqBC,cAAc,EAAEC,oBAAoB,QAAQ,2BAA2B;AAQrF,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAKlCC,YAAoBC,iBAAqC,EAAWC,WAAsB,EAAUC,MAAc;IAA9F,sBAAiB,GAAjBF,iBAAiB;IAA+B,gBAAW,GAAXC,WAAW;IAAqB,WAAM,GAANC,MAAM;IAH1G,yBAAoB,GAAGL,oBAAoB;IAC3C,YAAO,GAAW,EAAE;IACpB,mBAAc,GAAkB,EAAE;EAGlC;EAEAM,QAAQ;IACN,IAAI,CAACH,iBAAiB,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAChDC,GAAiB,IAAI;MACpB,IAAI,CAACC,cAAc,GAAGD,GAAG;IAC3B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;IACD,IAAI,CAACE,cAAc,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;MAC3CC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACkB,QAAQ,CAAC,CAAC;MACtCC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACkB,QAAQ,CAAC,CAAC;MACpCE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACkB,QAAQ,CAAC,CAAC;MACrCG,cAAc,EAAE,CAACpB,cAAc,CAACqB,MAAM,EAAE,CAACtB,UAAU,CAACkB,QAAQ,CAAC;KAC9D,CAAC;EAEJ;EAEAK,gBAAgB,CAACC,EAAW;IAC1B,IAAI,CAACnB,iBAAiB,CAACkB,gBAAgB,CAACC,EAAE,CAAC,CAACd,SAAS,CAClDC,GAAG,IAAI;MACF,IAAIA,GAAG,CAACc,MAAM,KAAK,GAAG,EACtB,IAAI,CAACb,cAAc,GAAG,IAAI,CAACA,cAAc,CAACc,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,OAAO,KAAKJ,EAAE,CAAC;IAE/F,CAAC,CACF;EACL;EACAK,qBAAqB,CAACD,OAAe;IACnC,IAAI,CAACvB,iBAAiB,CAACwB,qBAAqB,CAACD,OAAO,CAAC,CAClDlB,SAAS,CACPoB,QAAQ,IAAI;MACX,IAAI,CAACC,OAAO,GAAG,YAAYD,QAAQ,+BAA+B;IACpE,CAAC,EACAjB,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,IAAI,CAACkB,OAAO,GAAG,2CAA2C;IAC5D,CAAC,CACF;EACL;CACC;AAhDY5B,uBAAuB,eALnCJ,SAAS,CAAC;EACTiC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACW/B,uBAAuB,CAgDnC;SAhDYA,uBAAuB","names":["Component","Validators","TypeAbonnement","TypeAbonnementValues","AbonnementListComponent","constructor","abonnementService","formBuilder","router","ngOnInit","getAllAbonnement","subscribe","res","listAbonnement","error","console","abonnementForm","group","dateDebut","required","dateFin","prixAbon","typeAbonnement","ANNUEL","deleteAbonnement","id","status","filter","abonnement","numAbon","calculerJoursRestants","response","message","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\projet_spring_angular\\GestionSkiProject\\frontend-Angular\\src\\app\\component_ab\\components\\abonnement-list\\abonnement-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Abonnement, TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nimport { AbonnementService } from 'src/app/services/abonnement.service';\n\n@Component({\n  selector: 'app-abonnement-list',\n  templateUrl: './abonnement-list.component.html',\n  styleUrls: ['./abonnement-list.component.scss']\n})\nexport class AbonnementListComponent {\n  abonnementForm: FormGroup;\n  typeAbonnementValues = TypeAbonnementValues;\n  message: string = '';\n  listAbonnement : Abonnement[] = [];\n  constructor(private abonnementService : AbonnementService , private formBuilder :FormBuild ,private router: Router ){\n\n  }\n  \n  ngOnInit() {\n    this.abonnementService.getAllAbonnement().subscribe(\n      (res: Abonnement[]) => {\n        this.listAbonnement = res;\n      },\n      (error) => {\n        console.error('Error fetching abonnement:', error);\n      }\n    );\n    this.abonnementForm = this.formBuilder.group({\n      dateDebut: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n\n  }\n\n  deleteAbonnement(id : number) {\n    this.abonnementService.deleteAbonnement(id).subscribe(\n      (res) => {\n            if (res.status === 200)\n            this.listAbonnement = this.listAbonnement.filter(abonnement => abonnement.numAbon !== id);\n\n      }\n    )\n}\ncalculerJoursRestants(numAbon: number): void {\n  this.abonnementService.calculerJoursRestants(numAbon)\n    .subscribe(\n      (response) => {\n        this.message = `Il reste ${response} jours dans votre abonnement.`;\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'appel du service:', error);\n        this.message = 'Erreur lors du calcul des jours restants.';\n      }\n    );\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}