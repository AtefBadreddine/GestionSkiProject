{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/abonnement.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"class\", \"ts\"];\nfunction AbonnementCreateComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"date Debut est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AbonnementCreateComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, AbonnementCreateComponent_div_10_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dateDebut.errors[\"required\"]);\n  }\n}\nfunction AbonnementCreateComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Prenom est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AbonnementCreateComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, AbonnementCreateComponent_div_15_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.prenomS.errors[\"required\"]);\n  }\n}\nfunction AbonnementCreateComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"ville est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AbonnementCreateComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, AbonnementCreateComponent_div_20_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.ville.errors[\"required\"]);\n  }\n}\nfunction AbonnementCreateComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Date est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AbonnementCreateComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, AbonnementCreateComponent_div_25_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.dateNaissance.errors[\"required\"]);\n  }\n}\nexport class AbonnementCreateComponent {\n  constructor(formBuilder, abonnementService, router) {\n    this.formBuilder = formBuilder;\n    this.abonnementService = abonnementService;\n    this.router = router;\n    this.typeAbonnementValues = TypeAbonnementValues;\n  }\n  ngOnInit() {\n    // Initialisation du formulaire réactif avec des champs et des validateurs\n    this.abonnementForm = this.formBuilder.group({\n      dateDebyt: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n  }\n  // Function called on form submission\n  addAbonnement() {\n    if (this.abonnementForm.valid) {\n      let a = this.abonnementForm.value;\n      this.abonnementService.addAbonnement(a).subscribe(response => {\n        if (response) {\n          this.router.navigate(['abonnements']);\n        } else {\n          console.error('Unexpected response status:');\n        }\n      }, error => {\n        console.error('Error adding abonnement:', error);\n      });\n    }\n  }\n  get numAbon() {\n    return this.abonnementForm.get('numAbon');\n  }\n  get dateDebut() {\n    return this.abonnementForm.get('dateDebut');\n  }\n  get dateFin() {\n    return this.abonnementForm.get('dateFin');\n  }\n  get prixAbon() {\n    return this.abonnementForm.get('prixAbon');\n  }\n  get typeAbonnement() {\n    return this.abonnementForm.get('typeAbonnement');\n  }\n  static #_ = this.ɵfac = function AbonnementCreateComponent_Factory(t) {\n    return new (t || AbonnementCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AbonnementService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AbonnementCreateComponent,\n    selectors: [[\"app-abonnement-create\", 8, \"ts\"]],\n    attrs: _c0,\n    decls: 29,\n    vars: 5,\n    consts: [[1, \"p-4\", \"sm:p-8\", \"bg-white\", \"shadow\", \"sm:rounded-lg\", \"max-w-5xl\", \"mx-auto\", \"sm:px-6\", \"lg:px-8\", \"space-y-6\"], [3, \"formGroup\", \"submit\"], [1, \"border-b\", \"border-gray-900/10\", \"pb-12\"], [1, \"text-base\", \"font-semibold\", \"leading-7\", \"text-gray-900\"], [1, \"mt-8\", \"grid\", \"grid-cols-1\", \"gap-x-6\", \"gap-y-8\", \"sm:grid-cols-6\", \"items-start\"], [1, \"sm:col-span-3\"], [\"for\", \"nom\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"dateDebut\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [\"class\", \"text-sm text-red-600 space-y-1 mt-2\", 4, \"ngIf\"], [\"for\", \"prenom\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"text\", \"id\", \"prenom\", \"formControlName\", \"prenomS\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [\"for\", \"ville\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"text\", \"id\", \"ville\", \"formControlName\", \"ville\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [\"for\", \"dateN\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\", \"text-gray-900\", \"dark:text-white\"], [\"type\", \"date\", \"id\", \"dateN\", \"formControlName\", \"dateNaissance\", \"placeholder\", \"Select date\", 1, \"bg-gray-50\", \"border\", \"border-gray-300\", \"text-gray-900\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [1, \"mt-6\", \"flex\", \"items-center\", \"justify-end\", \"gap-x-6\"], [\"type\", \"submit\", 1, \"rounded-md\", \"bg-blue-700\", \"cur\", \"uppercase\", \"px-3\", \"py-2\", \"text-sm\", \"font-semibold\", \"text-white\", \"shadow-sm\", \"hover:bg-blue-900\", \"cursor-pointer\"], [1, \"text-sm\", \"text-red-600\", \"space-y-1\", \"mt-2\"], [4, \"ngIf\"]],\n    template: function AbonnementCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function AbonnementCreateComponent_Template_form_submit_1_listener() {\n          return ctx.addAbonnement();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"h2\", 3);\n        i0.ɵɵtext(4, \"Ajouter un Abonnement :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, AbonnementCreateComponent_div_10_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Prenom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, AbonnementCreateComponent_div_15_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Ville\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵtemplate(20, AbonnementCreateComponent_div_20_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Date naissance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵtemplate(25, AbonnementCreateComponent_div_25_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 15)(27, \"button\", 16);\n        i0.ɵɵtext(28, \" Ajouter\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.abonnementForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateDebut.invalid && (ctx.dateDebut.dirty || ctx.dateDebut.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateFin.invalid && (ctx.prenomS.dirty || ctx.prenomS.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.ville.invalid && (ctx.ville.dirty || ctx.ville.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateNaissance.invalid && (ctx.dateNaissance.dirty || ctx.dateNaissance.touched));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhYm9ubmVtZW50LWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50X2FiL2NvbXBvbmVudHMvYWJvbm5lbWVudC1jcmVhdGUvYWJvbm5lbWVudC1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdMQUFnTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","TypeAbonnement","TypeAbonnementValues","i0","AbonnementCreateComponent","constructor","formBuilder","abonnementService","router","ngOnInit","abonnementForm","group","dateDebyt","required","dateFin","prixAbon","typeAbonnement","ANNUEL","addAbonnement","valid","a","value","subscribe","response","navigate","console","error","numAbon","get","dateDebut","selectors","attrs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\projet_spring_angular\\GestionSkiProject\\frontend-Angular\\src\\app\\component_ab\\components\\abonnement-create\\abonnement-create.component.ts","C:\\projet_spring_angular\\GestionSkiProject\\frontend-Angular\\src\\app\\component_ab\\components\\abonnement-create\\abonnement-create.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Abonnement, TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nimport { AbonnementService } from 'src/app/services/abonnement.service';\n\n\n@Component({\n  selector: 'app-abonnement-create.ts',\n  templateUrl: './abonnement-create.component.html',\n  styleUrls: ['./abonnement-create.component.scss']\n})\nexport class AbonnementCreateComponent {\n\n abonnementForm: FormGroup;\n typeAbonnementValues = TypeAbonnementValues;\n constructor(private formBuilder :FormBuilder , private abonnementService : AbonnementService,\n  private router: Router) {\n}\n  ngOnInit() {\n    // Initialisation du formulaire réactif avec des champs et des validateurs\n    this.abonnementForm = this.formBuilder.group({\n      dateDebyt: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n  }\n    // Function called on form submission\n    addAbonnement() {\n      if (this.abonnementForm.valid) {\n        let a :  Abonnement = this.abonnementForm.value;\n  \n        this.abonnementService.addAbonnement(a).subscribe(\n          (response) => {\n            if (response) {\n              this.router.navigate(['abonnements']);\n            } else {\n              console.error('Unexpected response status:');\n            }\n          },\n          (error) => {\n            console.error('Error adding abonnement:', error);\n          }\n        );\n      }\n    }\n    get numAbon(){\n      return this.abonnementForm.get('numAbon');\n    }\n    get dateDebut(){\n      return this.abonnementForm.get('dateDebut');\n    }\n    get dateFin(){\n      return this.abonnementForm.get('dateFin');\n    }\n    get prixAbon(){\n      return this.abonnementForm.get('prixAbon');\n    } \n    get typeAbonnement(){\n      return this.abonnementForm.get('typeAbonnement');\n    }\n    \n    \n    \n\n\n\n}\n","\n<div class=\"p-4 sm:p-8 bg-white shadow sm:rounded-lg max-w-5xl mx-auto sm:px-6 lg:px-8 space-y-6\">\n  <!-- Container for the Skier Form -->\n  <form [formGroup]=\"abonnementForm\" (submit)=\"addAbonnement()\">\n      <div class=\"border-b border-gray-900/10 pb-12\">\n        <!-- Section Heading: \"Ajouter un skieur\" -->\n        <h2 class=\"text-base font-semibold leading-7 text-gray-900\">Ajouter un Abonnement :</h2>\n\n        <div class=\"mt-8 grid grid-cols-1  gap-x-6 gap-y-8 sm:grid-cols-6 items-start\">\n          <div class=\"sm:col-span-3\">\n            <label for=\"nom\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Nom</label>\n            <input type=\"text\" id=\"nom\" formControlName=\"dateDebut\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \">\n            <div *ngIf=\"dateDebut.invalid && (dateDebut.dirty || dateDebut.touched) \" class=\"text-sm text-red-600 space-y-1 mt-2\">\n              <div *ngIf=\"dateDebut.errors['required']\">date Debut est obligatoire</div>\n              <!-- Add more conditions for other errors -->\n            </div>\n          </div>\n          <div class=\"sm:col-span-3\">\n            <label for=\"prenom\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Prenom</label>\n            <input type=\"text\" id=\"prenom\" formControlName=\"prenomS\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  \">\n            <div *ngIf=\"dateFin.invalid && (prenomS.dirty || prenomS.touched)\" class=\"text-sm text-red-600 space-y-1 mt-2\">\n              <div *ngIf=\"prenomS.errors['required']\">Prenom est obligatoire</div>\n              <!-- Add more conditions for other errors -->\n            </div>\n          </div>\n\n          <div class=\"sm:col-span-3\">\n            <label for=\"ville\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Ville</label>\n            <input type=\"text\" id=\"ville\" formControlName=\"ville\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  \">\n            <div *ngIf=\"ville.invalid && (ville.dirty || ville.touched)\" class=\"text-sm text-red-600 space-y-1 mt-2\">\n              <div *ngIf=\"ville.errors['required']\">ville est obligatoire</div>\n              <!-- Add more conditions for other errors -->\n            </div>\n          </div>\n          <div class=\"sm:col-span-3\">\n            <label for=\"dateN\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Date naissance</label>\n            <input type=\"date\" id=\"dateN\" formControlName=\"dateNaissance\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full  p-2.5\" placeholder=\"Select date\">\n            <div *ngIf=\"dateNaissance.invalid && (dateNaissance.dirty || dateNaissance.touched)\" class=\"text-sm text-red-600 space-y-1 mt-2\">\n              <div *ngIf=\"dateNaissance.errors['required']\">Date est obligatoire</div>\n              <!-- Add more conditions for other errors -->\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n\n    <div class=\"mt-6 flex items-center justify-end gap-x-6\">\n      <button type=\"submit\"  class=\"rounded-md bg-blue-700 cur uppercase px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-900 cursor-pointer\">\n        Ajouter</button>\n    </div>\n  </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}