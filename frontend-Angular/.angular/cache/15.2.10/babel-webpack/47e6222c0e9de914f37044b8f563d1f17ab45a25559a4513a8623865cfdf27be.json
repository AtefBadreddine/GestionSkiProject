{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/abonnement.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"class\", \"ts\"];\nexport class AbonnementCreateComponent {\n  constructor(formBuilder, abonnementService, router) {\n    this.formBuilder = formBuilder;\n    this.abonnementService = abonnementService;\n    this.router = router;\n    this.typeAbonnementValues = TypeAbonnementValues;\n  }\n  ngOnInit() {\n    // Initialisation du formulaire réactif avec des champs et des validateurs\n    this.abonnementForm = this.formBuilder.group({\n      dateDebyt: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n  }\n  // Function called on form submission\n  addAbonnement() {\n    if (this.abonnementForm.valid) {\n      let a = this.abonnementForm.value;\n      this.abonnementService.addAbonnement(a).subscribe(response => {\n        if (response) {\n          this.router.navigate(['abonnements']);\n        } else {\n          console.error('Unexpected response status:');\n        }\n      }, error => {\n        console.error('Error adding abonnement:', error);\n      });\n    }\n  }\n  get numAbon() {\n    return this.abonnementForm.get('numAbon');\n  }\n  get dateDebut() {\n    return this.abonnementForm.get('dateDebut');\n  }\n  get dateFin() {\n    return this.abonnementForm.get('dateFin');\n  }\n  get prixAbon() {\n    return this.abonnementForm.get('prixAbon');\n  }\n  get typeAbonnement() {\n    return this.abonnementForm.get('typeAbonnement');\n  }\n  static #_ = this.ɵfac = function AbonnementCreateComponent_Factory(t) {\n    return new (t || AbonnementCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AbonnementService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AbonnementCreateComponent,\n    selectors: [[\"app-abonnement-create\", 8, \"ts\"]],\n    attrs: _c0,\n    decls: 0,\n    vars: 0,\n    template: function AbonnementCreateComponent_Template(rf, ctx) {},\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhYm9ubmVtZW50LWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50X2FiL2NvbXBvbmVudHMvYWJvbm5lbWVudC1jcmVhdGUvYWJvbm5lbWVudC1jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdMQUFnTCIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAAoBA,UAAU,QAAQ,gBAAgB;AAGtD,SAAqBC,cAAc,EAAEC,oBAAoB,QAAQ,2BAA2B;;;;;;AAS5F,OAAM,MAAOC,yBAAyB;EAIrCC,YAAoBC,WAAwB,EAAWC,iBAAqC,EACnFC,MAAc;IADH,gBAAW,GAAXF,WAAW;IAAwB,sBAAiB,GAAjBC,iBAAiB;IAC/D,WAAM,GAANC,MAAM;IAFf,yBAAoB,GAAGL,oBAAoB;EAG5C;EACEM,QAAQ;IACN;IACA,IAAI,CAACC,cAAc,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC3CC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACtCC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACY,QAAQ,CAAC,CAAC;MACpCE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACY,QAAQ,CAAC,CAAC;MACrCG,cAAc,EAAE,CAACd,cAAc,CAACe,MAAM,EAAE,CAAChB,UAAU,CAACY,QAAQ,CAAC;KAC9D,CAAC;EACJ;EACE;EACAK,aAAa;IACX,IAAI,IAAI,CAACR,cAAc,CAACS,KAAK,EAAE;MAC7B,IAAIC,CAAC,GAAiB,IAAI,CAACV,cAAc,CAACW,KAAK;MAE/C,IAAI,CAACd,iBAAiB,CAACW,aAAa,CAACE,CAAC,CAAC,CAACE,SAAS,CAC9CC,QAAQ,IAAI;QACX,IAAIA,QAAQ,EAAE;UACZ,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;SACtC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;;MAEhD,CAAC,EACAA,KAAK,IAAI;QACRD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CACF;;EAEL;EACA,IAAIC,OAAO;IACT,OAAO,IAAI,CAACjB,cAAc,CAACkB,GAAG,CAAC,SAAS,CAAC;EAC3C;EACA,IAAIC,SAAS;IACX,OAAO,IAAI,CAACnB,cAAc,CAACkB,GAAG,CAAC,WAAW,CAAC;EAC7C;EACA,IAAId,OAAO;IACT,OAAO,IAAI,CAACJ,cAAc,CAACkB,GAAG,CAAC,SAAS,CAAC;EAC3C;EACA,IAAIb,QAAQ;IACV,OAAO,IAAI,CAACL,cAAc,CAACkB,GAAG,CAAC,UAAU,CAAC;EAC5C;EACA,IAAIZ,cAAc;IAChB,OAAO,IAAI,CAACN,cAAc,CAACkB,GAAG,CAAC,gBAAgB,CAAC;EAClD;EAAC;qBAjDQxB,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA","names":["Validators","TypeAbonnement","TypeAbonnementValues","AbonnementCreateComponent","constructor","formBuilder","abonnementService","router","ngOnInit","abonnementForm","group","dateDebyt","required","dateFin","prixAbon","typeAbonnement","ANNUEL","addAbonnement","valid","a","value","subscribe","response","navigate","console","error","numAbon","get","dateDebut","selectors","attrs","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\projet_spring_angular\\GestionSkiProject\\frontend-Angular\\src\\app\\component_ab\\components\\abonnement-create\\abonnement-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Abonnement, TypeAbonnement, TypeAbonnementValues } from 'src/app/models/abonnement';\nimport { AbonnementService } from 'src/app/services/abonnement.service';\n\n\n@Component({\n  selector: 'app-abonnement-create.ts',\n  templateUrl: './abonnement-create.component.html',\n  styleUrls: ['./abonnement-create.component.scss']\n})\nexport class AbonnementCreateComponent {\n\n abonnementForm: FormGroup;\n typeAbonnementValues = TypeAbonnementValues;\n constructor(private formBuilder :FormBuilder , private abonnementService : AbonnementService,\n  private router: Router) {\n}\n  ngOnInit() {\n    // Initialisation du formulaire réactif avec des champs et des validateurs\n    this.abonnementForm = this.formBuilder.group({\n      dateDebyt: [\"\", [Validators.required]],\n      dateFin: [\"\", [Validators.required]],\n      prixAbon: [\"\", [Validators.required]],\n      typeAbonnement: [TypeAbonnement.ANNUEL, [Validators.required]]\n    });\n  }\n    // Function called on form submission\n    addAbonnement() {\n      if (this.abonnementForm.valid) {\n        let a :  Abonnement = this.abonnementForm.value;\n  \n        this.abonnementService.addAbonnement(a).subscribe(\n          (response) => {\n            if (response) {\n              this.router.navigate(['abonnements']);\n            } else {\n              console.error('Unexpected response status:');\n            }\n          },\n          (error) => {\n            console.error('Error adding abonnement:', error);\n          }\n        );\n      }\n    }\n    get numAbon(){\n      return this.abonnementForm.get('numAbon');\n    }\n    get dateDebut(){\n      return this.abonnementForm.get('dateDebut');\n    }\n    get dateFin(){\n      return this.abonnementForm.get('dateFin');\n    }\n    get prixAbon(){\n      return this.abonnementForm.get('prixAbon');\n    } \n    get typeAbonnement(){\n      return this.abonnementForm.get('typeAbonnement');\n    }\n    \n    \n    \n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}